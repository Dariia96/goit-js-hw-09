{"mappings":"AACaA,SAASC,cAAc,SAApC,MACMC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBACrCI,EAAYL,SAASC,cAAc,mBAEnCK,GADSF,EAAYG,MACRL,EAAWK,OAmB9BF,EAAUG,iBAAiB,SAAS,YAhBpC,SAAuBC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GACjB,IAAIC,SAAQ,CAACC,EAASC,KACrCC,YAAW,KACHN,EACAI,EAAQG,QAAQC,IAAI,uBAAqBV,QAAiBC,QAEpEM,EAAKE,QAAQC,IAAI,sBAAoBV,QAAiBC,OAAW,GAE5DA,EAAM,G,CAOfU,CAAc,EAAGd,GACjB,IAAK,IAAIe,EAAI,EAAGA,EAAIjB,EAAYG,MAAOc,IACrCX,OAAgBP,EAAUI,MAC1Bc,EAAIZ,SACJa,aAIGC,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBO,YAAW,KACLN,eACFO,QAAQC,IAAI,uBAAqBV,QAAiBC,MAAU,GAG7DA,EAAM,IAGVc,OAAM,EAACf,SAAEA,EAAQC,MAAEA,MAClBO,YAAW,KACTC,QAAQC,IAAI,sBAAoBV,QAAeC,MAAU,GACzD,G","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector(\".form\");\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst submitBtn = document.querySelector('[type=\"submit\"]');\nconst amount = amountInput.value;\nconst delayValue = delayInput.value;\n\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n  const promiseFirst = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n            } else {\n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n  }\n        }, delay)\n    })\n}\n\n\n\nsubmitBtn.addEventListener(\"click\", function () {\n  createPromise(1, delayValue);\n  for (let i = 1; i < amountInput.value; i++) {\n    delay = delay + stepInput.value;\n    i = position;\n    promiseFirst\n    \n    \n         \n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n                \n          }\n        }, delay)\n   \n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      })\n  }\n  })\n\n\n//for (let i = 3; i > 0; i--) {\n// const delay = i * 1000;\n//console.log('DELAY: ' + delay);\n//console.log('i: ' + i);\n//setTimeout(() => console.log(i), delay);\n//}\n //for (let promise = 1; promise <= amount; promise++) {\n //const delay = promise * 1000;\n//console.log('DELAY: ' + delay);\n//console.log('i: ' + i);\n//setTimeout(() => console.log(), delay);\n//}"],"names":["document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$delayValue","value","addEventListener","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","$47d4ff9957288465$var$createPromise","i","promiseFirst","then","catch"],"version":3,"file":"03-promises.641ee565.js.map"}